package com.kh.model.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import com.kh.model.vo.Member;

/*
 * DAO (Data Access Object)
 * Controller에 의해 호출
 * Controller에서 요청받은 작업을 수행하기 위한 클래스
 * DB에 직접적으로 접근 후 해당 SQL문을 실행 및 결과 받기(JDBC)
 * 
 * */

public class MemberDao {
	
	/*
	 * JDBC용 객체
	 * -Connection : DB의 연결정보를 담고 있는 객체(IP주소,PORT번호,계정명,비밀번호)
	 * -(Prepared)Statement : 해당 DB에 SQL문을 전달하고 실행한 후 결과를 받아내는 객체
	 * -ResultSet : 만일 실행한 SQLansdl SELECT문일 경우 조회된 결과들이 담겨있는 객체
	 * 
	 * JDBC 처리 순서
	 * 1)JDBC Driver 등록 : 해당 DBMS가 제공하는 클래스 등록
	 * 2)Connection 생성 ㅣ 접속하고자 하는 DB에 정보를 입력해서 DB에 접속하면서 생성
	 * 3)Statement 생성 : Connection 객체를 이용해서 생성
	 * 4)SQL문을 전달하면서 실행 : Statement 객체를 이용해서 SQL 문을 실행
	 * 						-SELECT 문일 경우 excuteQuery()메소드를 이용해서 실행
	 * 						-나머지 DML일 경우 excutUpdate()메소드를 이용하여 실행
	 * 5)결과 받기
	 * 6_1SELECT 문일 경우 ResultSet객체(조회된 데이터가 담겨있음)로 받는다
	 * 6_2나머지 DML문을 경우 - int형 변수(처리된 행 개수)로 받기
	 * 6_3)DML문)ResultSet 객체에 담긴 데이터들을 하나씩 뽑아서 VO 객체에 담기 (ArrayList로 묶어서 관리하기)
	 * 6_2)DML문)트랜잭션 처리(성공이면 COMMIT;실패면 ROLLBACK;)
	 * 7)사용완료한 JDBC용 객체들 자원 반납(close) -> 생성의 역순으로 진행

	 * */
	
	public int insertMember(Member m) {//INSERT문 작업
		
		//필요한 변수들 선언
		int result =0; //처리된 결과(처리된 행수)를 담을 변수
		Connection conn =null; //접속된 DB에 대한 정보를 담는 변수
		Statement stmt = null; // SQL문 실행 후 결과를 받기위한 변수
		
		String sql = "INSERT INTO MEMBER VALUES(SEQ_USERNO.NEXTVAL,"
												+"'"+m.getUserId()+"',"
												+"'"+m.getUserPw()+"',"
												+"'"+m.getUserName()+"',"
												+"'"+m.getGender()+"',"
												+	m.getAge()+","
												+"'"+m.getEmail()+"',"
												+"'"+m.getPhone()+"',"
												+"'"+m.getAddress()+"',"
												+"'"+m.getHobby()+"',"
												+"SYSDATE)";
		//1) JDBC 등록
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			conn=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","JDBC","JDBC");
			stmt=conn.createStatement();
			result = stmt.executeUpdate(sql);
			
			if(result>0) {
				conn.commit();
			}else {
				conn.rollback();
			}
			
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			try {
			stmt.close();
			conn.close();
		}catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	if(result>0) {
		System.out.println("성공적으로 삽입되었습니다.");
	}else {
		System.out.println("데이터 삽입 실패");
	}
}
}
